## programming assignment 1 ##
## compute the product using karatsuba methods

def karatsuba(x,y):
    if len(x)==1 and len(y)==1:
        ans=int(x)*int(y)
    else:
        n=len(x)
        ac=karatsuba(x[0:int(n/2)],y[0:int(n/2)])
        bd=karatsuba(x[int(n/2):],y[int(n/2):])
        mid=karatsuba(str(int(x[0:int(n/2)])+int(x[int(n/2):])),str(int(y[0:int(n/2)])+int(y[int(n/2):])))-ac-bd
        ans=10**n*ac+10**int(n/2)*mid+bd
    return ans
    
    
x='123412'
y='543212'
print (karatsuba(x,y))


## programming assignment 2 ##
## count inversions using divide and conquer methods ##
import os
cwd = os.getcwd()
print(cwd)

filename=cwd+'/texts'
print(filename)

def read_integers(filename):
    with open(filename) as f:
        return [int(x) for x in f]
  
lineList=read_integers(filename)

def count_split(sorted_A,sorted_B):
    if min(len(sorted_A),len(sorted_B))==0:
        return 0
    else: 
        i=0;j=0;s=0
        while i<len(sorted_A) and j<len(sorted_B):
            if sorted_A[i]>sorted_B[j]:
                s+=len(sorted_A)-i
                j+=1
            else:
                i+=1
        return s
    

def count_sort(L): 
    if len(L)==1:
        return 0
    else:
        A=count_sort(L[:int(len(L)/2)])
        B=count_sort(L[int(len(L)/2):])
        C=count_split(sorted(L[:int(len(L)/2)]),sorted(L[int(len(L)/2):]))
        return A+B+C
        
    
sorted_A=[1,4,6,8]
sorted_B=[2,4,6,7,9,11]  
print(count_split(sorted_A,sorted_B))

L=[1,2,4,6,2,7,4,8,10,2,7,3,79,1,3678,3]
print(lineList[:12])
print(count_sort(lineList))
#print(count_sort(L))
